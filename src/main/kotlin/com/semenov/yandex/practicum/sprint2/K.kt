package com.semenov.yandex.practicum.sprint2

fun main() {
    val factorial = factorial(readln().toInt())
    println(factorial)
}

private val memo = mutableMapOf<Int, Long>()

private fun factorial(n: Int): Long {
    return memo.getOrPut(n) {
        when (n) {
            0, 1 -> 1
            else -> factorial(n - 2) + factorial(n - 1)
        }
    }
}

/**
У Тимофея было n ( 0 ≤ n ≤ 3 2 ) стажёров. Каждый стажёр хотел быть лучше своих предшественников,
поэтому i -й стажёр делал столько коммитов, сколько делали два предыдущих стажёра в сумме.
Два первых стажёра были менее инициативными —– они сделали по одному коммиту.
Пусть F i —– число коммитов, сделанных i -м стажёром (стажёры нумеруются с нуля).
Тогда выполняется следующее: F 0 = F 1 = 1 . Для всех i ≥ 2 выполнено F i = F i − 1 + F i − 2 .
Определите, сколько кода напишет следующий стажёр –— найдите F n .
Решение должно быть реализовано рекурсивно.

Формат ввода
На вход подаётся
n — целое число в диапазоне от 0 до 32.
Формат вывода
Нужно вывести Fn.
Пример 1
Ввод	Вывод
3       3

Пример 2
Ввод	Вывод
0       1
 * */

